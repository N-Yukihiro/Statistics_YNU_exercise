---
title: "R演習1 - 代表値"
format: html
---

### 中央値

中央値を算出する関数として`median()`関数がある.
データフレームから特定の列の中央値を知りたい場合は`オブジェクト名$列名`を引数に追加する.
`$`演算子はオブジェクト内の列を操作したい場合によく利用される.
`penguins`データには欠測(NA)があるので、それを取り除いて中央値を取得するには、`na.rm = TRUE`と指定する.

```{r}
library(pacman)
pacman::p_load(palmerpenguins)
x <- 1:9
median(x)
median(penguins$bill_length_mm,
       na.rm = TRUE)
```

### 算術平均

算術平均を算出する関数として`mean()`関数がある.
`median()`関数と同じくデータフレームを直接引数として取ることはできない.
小数点以下の値を丸めるには`round()`関数を利用する.
第2引数で小数点以下何桁表示するかを与える.

```{r}
mean(x)
mean(penguins$bill_length_mm, na.rm = TRUE)
round(mean(penguins$bill_length_mm,
           na.rm = TRUE), 
      2)
```

### `summary()`関数を用いて求める

`summary()`関数でも算術平均を知ることができる.
`summary()`関数はベクトルでもデータフレームでも良い.

```{r}
summary(penguins$bill_length_mm)
summary(penguins)
```

### 定義に従って算術平均を求める(Advanced)

定義にしたがって自身で算術平均を求める.
まず, `sum()`関数を用いて総和を求める.
次に, `length()`関数を用いてデータの長さ(データサイズ$n$)を求める.
総和をデータサイズで割ることで, 算術平均が得られる.

```{r}
sum_x  <- sum(x)
size_x <- length(x)
sum_x / size_x
sum(penguins$bill_length_mm, na.rm = TRUE) / 
  sum(!is.na(penguins$bill_length_mm))
```

### ヒストグラムに算術平均を加える

`ggplot2`で描いたヒストグラムに縦線を加えるには`geom_vline()`を追加する.
`xintercept`でx軸のどこに線を引くのかを与える.
ここでは, 算術平均を計算し, 与えている.
線は`linetype`で指定できるため点線を指定し, `colour`で線の色を赤に指定した.

```{r}
p_load(ggplot2)
ggplot(penguins) +
  aes(x = bill_length_mm) +
  geom_histogram() +
  geom_vline(xintercept = mean(penguins$bill_length_mm, 
                               na.rm = TRUE),
             linetype   = "dashed",
             colour     = "red")
```

### 幾何平均

幾何平均を求めるには`psych`パッケージの`geometric.mean()`関数を利用する.

```{r}
pacman::p_load(psych)
psych::geometric.mean(x)
geometric.mean(penguins$bill_length_mm, 
               na.rm = TRUE)
```

### 定義に従って幾何平均を求める(Advanced)

定義にしたがって自身で幾何平均を求める.
まず, `prod()`関数を用いて総乗を求める.
次に, `length()`関数を用いてデータの長さ(サイズ)を求める.
総乗を$\frac{1}{\text{データサイズ}}$乗(冪乗根)することで, 幾何平均が得られる.
各値とサンプルサイズが共に大きいと総乗が無限大に発散してしまう.

```{r}
prod(x)^(1 / length(x))

prod(penguins$bill_length_mm,
     na.rm = TRUE)^
  (1 / sum(!is.na(penguins$bill_length_mm)))
```

### `log()`を用いて幾何平均を求める(Advanced)

データを$e$を底とする対数に変換し, 算術平均を行い, 指数関数で戻すことでも幾何平均を得られる.
底を2とした場合には, 対数の算術平均を指数として2に対して累乗する.

```{r}
exp(mean(log(x)))
2^(mean(log2(x)))
10^(mean(log10(penguins$bill_length_mm), na.rm = TRUE))
```

### 調和平均

調和平均を求めるには`psych`パッケージの`harmonic.mean()`関数を利用する.

```{r}
psych::harmonic.mean(x)
harmonic.mean(penguins$bill_length_mm, na.rm = TRUE)
```

### 定義に従って調和平均を求める(Advanced)

定義にしたがって自身で調和平均を求める.
まず, `^(-1)`と`sum()`関数を用いて逆数の総和を求める.
総和をデータサイズで除し, 更に逆数を求めることで調和平均が得られる.

```{r}
((sum(x^(-1)))/length(x))^(-1)
mean(penguins$bill_length_mm^(-1), na.rm = TRUE)^(-1)
```

### 平方平均

平方平均を求めるには`seewave`パッケージの`rms()`関数を利用する.

```{r}
pacman::p_load(seewave)
seewave::rms(x)
rms(penguins$bill_length_mm, na.rm = TRUE)
```

### 定義に従って平方平均を求める(Advanced)

定義にしたがって自身で平方平均を求める
データを2乗し, 平方根を取ることで, 平方平均を得られる.

```{r}
sqrt(mean(x^2))
sqrt(mean(penguins$bill_length_mm^2, na.rm = TRUE))
```